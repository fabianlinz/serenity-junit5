group = 'io.github.fabianlinz'
version =  project.hasProperty('releaseTag') ? project.property('releaseTag').replace('refs/tags/', '') : (project.hasProperty('branch') ? branchVersion() : '0.0.1-SNAPSHOT')

apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    api ("net.serenity-bdd:serenity-core:${serenityCoreVersion}") {
        exclude group: 'junit', module: 'junit'
    }
    api "org.junit.jupiter:junit-jupiter-api:${junit5Version}"

    testCompile "org.junit.jupiter:junit-jupiter-engine:${junit5Version}"
    testCompile "org.junit.platform:junit-platform-testkit:${junitTestKitVersion}"
    testCompile "org.assertj:assertj-core:${assertJVersion}"
    testCompile "org.slf4j:slf4j-simple:${slf4jVersion}"

    // Testcontainers currently has a dependency to to JUnit4 which we don't want on the classpath.
    // > https://www.testcontainers.org/test_framework_integration/junit_5
    // > https://github.com/testcontainers/testcontainers-java/issues/87
    testImplementation ("org.testcontainers:selenium:${testContainerVersion}") {
        exclude group: 'junit', module: 'junit'
    }
    testImplementation ("org.testcontainers:junit-jupiter:${testContainerVersion}") {
        exclude group: 'junit', module: 'junit'
    }
    // Because Testcontainers requires JUnit4 rule support to be on the classpath the JUnit5 migration-support is used here
    // (which bring Junit4 back to the classpath)
    // > https://junit.org/junit5/docs/current/user-guide/#migrating-from-junit4-rule-support
    testRuntime "org.junit.jupiter:junit-jupiter-migrationsupport:${junit5Version}"
    testCompileOnly "org.junit.jupiter:junit-jupiter-migrationsupport:${junit5Version}"
}

test {
    useJUnitPlatform {
        excludeTags "inner-test"
    }
    testLogging {
        exceptionFormat = 'full'
    }
    testLogging.showStandardStreams = true
}

test.finalizedBy(aggregate)

java {
    withJavadocJar()
    withSourcesJar()
}
publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/fabianlinz/serenity-junit5/")
            credentials {
                username = System.getenv("USERNAME")
                password = System.getenv("PASSWORD")
            }
        }

        maven {
            name = "OSSRH"
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = System.getenv("OSSRH_USER")
                password = System.getenv("OSSRH_PASSWORD")
            }
        }
    }

    publications {
        maven(MavenPublication) {
            from components.java

            pom {
                name = "Serenity JUnit5"
                description = "Writing and running Serenity BDD tests with JUnit5 (Jupiter test engine)"
                url = "https://github.com/fabianlinz/serenity-junit5"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "https://github.com/fabianlinz/serenity-junit5/blob/master/LICENSE"
                    }
                }
                developers {
                    developer {
                        name = 'Fabian Linz'
                        organizationUrl = "https://github.com/fabianlinz"
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com:fabianlinz/serenity-junit5.git'
                    developerConnection = 'scm:git://github.com:fabianlinz/serenity-junit5.git'
                    url = 'https://github.com/fabianlinz/serenity-junit5'
                }
            }
        }
    }
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

publish.dependsOn(build)

private branchVersion() {
    project.property('branch').replace('refs/heads/', '').replace('/', '-') + "-SNAPSHOT"
}

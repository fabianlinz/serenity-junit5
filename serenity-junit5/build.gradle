group = 'io.github.fabianlinz'
version =  project.hasProperty('releaseTag') ? project.property('releaseTag').replace('refs/tags/', '') : '0.0.1-SNAPSHOT'

apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    api ("net.serenity-bdd:serenity-core:${serenityCoreVersion}") {
        exclude group: 'junit', module: 'junit' //by both name and group
    }
    implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    implementation "org.junit.jupiter:junit-jupiter-api:${junit5Version}"

    testCompile "org.junit.jupiter:junit-jupiter-engine:${junit5Version}"
    testCompile "org.junit.platform:junit-platform-testkit:${junitTestKitVersion}"
    testCompile "org.assertj:assertj-core:${assertJVersion}"
    testCompile "org.slf4j:slf4j-simple:${slf4jVersion}"

    // Testcontainers currently has a dependency to to JUnit4 which we don't want on the classpath.
    // > https://www.testcontainers.org/test_framework_integration/junit_5
    // > https://github.com/testcontainers/testcontainers-java/issues/87
    testImplementation ("org.testcontainers:selenium:${testContainerVersion}") {
        exclude group: 'junit', module: 'junit' //by both name and group
    }
    testImplementation ("org.testcontainers:junit-jupiter:${testContainerVersion}") {
        exclude group: 'junit', module: 'junit' //by both name and group
    }
    // Because Testcontainers requires JUnit4 rule support to be on the classpath the JUnit5 migration-support is used here
    // (which bring Junit4 back to the classpath)
    // > https://junit.org/junit5/docs/current/user-guide/#migrating-from-junit4-rule-support
    testRuntime "org.junit.jupiter:junit-jupiter-migrationsupport:${junit5Version}"
    testCompileOnly "org.junit.jupiter:junit-jupiter-migrationsupport:${junit5Version}"
}

test {
    useJUnitPlatform {
        excludeTags "inner-test"
    }
    testLogging {
        exceptionFormat = 'full'
    }
    testLogging.showStandardStreams = true
}

test.finalizedBy(aggregate)

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/fabianlinz/serenity-junit5/")
            credentials {
                username = System.getenv("USERNAME")
                password = System.getenv("TOKEN")
            }
        }
    }

    publications {
        gpr(MavenPublication) {
            from components.java
            artifact sourceJar {
                classifier "sources"
            }

            pom {
                name.set("Serenity JUnit5")
                url.set("https://github.com/fabianlinz/serenity-junit5")
                licenses {
                    license {
                        name.set("Apache-2.0 License")
                        url.set("https://github.com/fabianlinz/serenity-junit5/blob/master/LICENSE")
                    }
                }
            }
        }
    }
}

publish.dependsOn(build)
